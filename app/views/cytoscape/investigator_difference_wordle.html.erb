<h2><%= @title %></h2>
<p style="line-height:15px; font-size: 10pt; margin-right: 10px; margin-left: 5px;font-family: Arial,Helvetica,Geneva,Sans-serif;">Word cloud based on the frequency of word occurrence in abstracts published in the last 5 years. </p>
<div id="investigators" style="padding:0px;margin:-5px;margin-bottom:15px;padding:5px;display:block;">&nbsp;
	<span class="h2" style="position:absolute;width:470px;text-align:center;padding:5px;"><%= @investigators[0].full_name %></span>
	<span class="h2" style="position:absolute;margin-left:480px;width:470px;text-align:center;"><%= @investigators[1].full_name %></span>
</div>
<div id="chart" style="padding:0px;margin:-5px;padding:0px;"><span id="chart1" style="position:absolute;"></span><span id="chart2" style="position:absolute;margin-left:490px;"></span></div>
<script type = "text/javascript">
var fill = d3.scale.category20b();

d3.json('<%= image_path(@json_callback1).split('?').first -%>', function(words) {
var fontSize = d3.scale.log().range([1, 40]);

	d3.layout.cloud().size([490, 620])
	      .words(words.map(function(d) {
	        return {text: d["word"], size: d["frequency"] * 3};
	      }))

         .rotate(function(d) { return ~~(Math.random() * 5) * 30 - 60; })
	      .fontSize(function(d) { return fontSize(+d.size); })
	      .on("end", draw)
	      .start();

	  function draw(words) {
	    svg = d3.select("#chart1").append("svg")
	        .attr("width", 490)
	        .attr("height", 640)
        background = svg.append("g")
        vis = svg.append("g")
	        .attr("transform", "translate(245,320)")
	    text = vis.selectAll("text")
	        .data(words)
        text.transition()
            .duration(100)
            .attr("transform", function(d) {
	          return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
	        })
	    text.enter().append("text")
            .attr("text-anchor", "middle")
	        .attr("transform", function(d) { return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")"; })
            .style("font-size", function(d) { return d.size + "px"; })
            .style("opacity", 1e-6)
    .transition()
      .duration(100)
      .style("opacity", 1);
        text.style("font-family", function(d) { return d.font; })
            .style("fill", function(d) { return fill(d.text.toLowerCase()); })	        
	        .text(function(d) { return d.text; });
    	var exitGroup = background.append("g")
      .attr("transform", vis.attr("transform"));
   var exitGroup = background.append("g")
      .attr("transform", vis.attr("transform"));
  var exitGroupNode = exitGroup.node();
  text.exit().each(function() {
    exitGroupNode.appendChild(this);
  });
 }
});

d3.json('<%= image_path(@json_callback2).split('?').first -%>', function(words) {
var fontSize = d3.scale.log().range([1, 50]);

	d3.layout.cloud().size([490, 620])
	      .words(words.map(function(d) {
	        return {text: d["word"], size: d["frequency"] * 3};
	      }))

         .rotate(function(d) { return ~~(Math.random() * 5) * 30 - 60; })
	      .fontSize(function(d) { return fontSize(+d.size); })
	      .on("end", draw)
	      .start();

	  function draw(words) {
	    svg = d3.select("#chart2").append("svg")
	        .attr("width", 490)
	        .attr("height", 640)
        background = svg.append("g")
        vis = svg.append("g")
	        .attr("transform", "translate(245,320)")
	    text = vis.selectAll("text")
	        .data(words)
        text.transition()
            .duration(100)
            .attr("transform", function(d) {
	          return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
	        })
	    text.enter().append("text")
            .attr("text-anchor", "middle")
	        .attr("transform", function(d) { return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")"; })
            .style("font-size", function(d) { return d.size + "px"; })
            .style("opacity", 1e-6)
    .transition()
      .duration(100)
      .style("opacity", 1);
        text.style("font-family", function(d) { return d.font; })
            .style("fill", function(d) { return fill(d.text.toLowerCase()); })	        
	        .text(function(d) { return d.text; });
        var exitGroup = background.append("g")
      .attr("transform", vis.attr("transform"));
   var exitGroup = background.append("g")
      .attr("transform", vis.attr("transform"));
  var exitGroupNode = exitGroup.node();
  text.exit().each(function() {
    exitGroupNode.appendChild(this);
  });
 }
});


</script>
